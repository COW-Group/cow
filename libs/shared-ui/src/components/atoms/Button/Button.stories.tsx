import type { Meta, StoryObj } from '@storybook/react';\nimport { Button } from './Button';\nimport { ArrowRight, Download, Heart } from 'lucide-react';\n\nconst meta: Meta<typeof Button> = {\n  title: 'Atoms/Button',\n  component: Button,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'COW Button component with glassmorphism design and comprehensive variants for all use cases.',\n      },\n    },\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: [\n        'primary', 'secondary', 'success', 'warning', 'error',\n        'ghost', 'outline', 'link', 'ethereum', 'polygon', 'solana', 'bitcoin'\n      ],\n    },\n    size: {\n      control: 'select',\n      options: ['xs', 'sm', 'md', 'lg', 'xl', 'icon'],\n    },\n    loading: {\n      control: 'boolean',\n    },\n    disabled: {\n      control: 'boolean',\n    },\n    fullWidth: {\n      control: 'boolean',\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n// Basic variants\nexport const Primary: Story = {\n  args: {\n    children: 'Primary Button',\n    variant: 'primary',\n  },\n};\n\nexport const Secondary: Story = {\n  args: {\n    children: 'Secondary Button',\n    variant: 'secondary',\n  },\n};\n\nexport const Success: Story = {\n  args: {\n    children: 'Success Button',\n    variant: 'success',\n  },\n};\n\nexport const Warning: Story = {\n  args: {\n    children: 'Warning Button',\n    variant: 'warning',\n  },\n};\n\nexport const Error: Story = {\n  args: {\n    children: 'Error Button',\n    variant: 'error',\n  },\n};\n\n// Blockchain variants\nexport const Ethereum: Story = {\n  args: {\n    children: 'Connect to Ethereum',\n    variant: 'ethereum',\n  },\n};\n\nexport const Polygon: Story = {\n  args: {\n    children: 'Switch to Polygon',\n    variant: 'polygon',\n  },\n};\n\nexport const Solana: Story = {\n  args: {\n    children: 'Trade on Solana',\n    variant: 'solana',\n  },\n};\n\n// Sizes\nexport const Sizes: Story = {\n  render: () => (\n    <div className=\"flex items-center gap-4\">\n      <Button size=\"xs\">Extra Small</Button>\n      <Button size=\"sm\">Small</Button>\n      <Button size=\"md\">Medium</Button>\n      <Button size=\"lg\">Large</Button>\n      <Button size=\"xl\">Extra Large</Button>\n    </div>\n  ),\n};\n\n// With icons\nexport const WithIcons: Story = {\n  render: () => (\n    <div className=\"flex items-center gap-4 flex-wrap\">\n      <Button leftIcon={<Download className=\"h-4 w-4\" />}>\n        Download\n      </Button>\n      <Button rightIcon={<ArrowRight className=\"h-4 w-4\" />}>\n        Continue\n      </Button>\n      <Button \n        leftIcon={<Heart className=\"h-4 w-4\" />}\n        rightIcon={<ArrowRight className=\"h-4 w-4\" />}\n        variant=\"success\"\n      >\n        Like & Share\n      </Button>\n    </div>\n  ),\n};\n\n// Loading states\nexport const Loading: Story = {\n  render: () => (\n    <div className=\"flex items-center gap-4\">\n      <Button loading>Loading...</Button>\n      <Button variant=\"success\" loading>Processing</Button>\n      <Button variant=\"outline\" loading>Submitting</Button>\n    </div>\n  ),\n};\n\n// Disabled states\nexport const Disabled: Story = {\n  render: () => (\n    <div className=\"flex items-center gap-4\">\n      <Button disabled>Disabled</Button>\n      <Button variant=\"success\" disabled>Disabled Success</Button>\n      <Button variant=\"outline\" disabled>Disabled Outline</Button>\n    </div>\n  ),\n};\n\n// Full width\nexport const FullWidth: Story = {\n  args: {\n    children: 'Full Width Button',\n    fullWidth: true,\n  },\n};\n\n// Interactive example\nexport const Interactive: Story = {\n  args: {\n    children: 'Click me!',\n    variant: 'primary',\n    onClick: () => alert('Button clicked!'),\n  },\n};